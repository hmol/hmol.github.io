{"version":3,"sources":["face.jpg","Components/Projects/ProjectItem/calendar.svg","Components/Terminal/TerminalLine/TerminalLine.tsx","Components/Terminal/Terminal.tsx","Components/Projects/ProjectItem/Technologies/Technologies.tsx","Components/Projects/ProjectItem/ProjectItem.tsx","Components/Projects/Projects.tsx","Components/Links/Links.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","TerminalLine","terminalPrint","this","props","print","href","className","command","React","Component","Terminal","target","rel","Technologies","technologies","names","map","item","ProjectItem","dateString","datestart","dateend","employer","customer","src","CalendarIcon","dangerouslySetInnerHTML","__html","text","Projects","Links","App","Face","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa292073.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face.28c04916.jpg\";","module.exports = __webpack_public_path__ + \"static/media/calendar.525c6713.svg\";","import React from 'react';\nimport './TerminalLine.scss';\n\nclass TerminalLine  extends React.Component<TerminalLineProps> {\n    render() {\n\t\tlet terminalPrint = <span>{this.props.print}</span>;\n\t\tif(this.props.href) {\n\t\t\tterminalPrint = <a href={this.props.href}>{this.props.print}</a>\n\t\t}\n        return (\t\t\t\n\t\t\t\t<div className=\"terminal-line\">\n\t\t\t\t\t<div className=\"terminal-command\">\n\t\t\t\t\t\t{this.props.command}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"terminal-print\">\n\t\t\t\t\t\t\"{terminalPrint}\"\n\t\t\t\t\t</div>\n\t\t\t  </div>\n        );  }\n}\n\nexport default TerminalLine;\ntype TerminalLineProps = {\n\tcommand: string,\n\tprint: string,\n\thref?: string\n}","import React from 'react';\nimport './Terminal.scss';\nimport TerminalLine from './TerminalLine/TerminalLine';\n\nclass Terminal extends React.Component {\n    render() {\n        return (\n\t\t\t<div className=\"terminal\">\n\t\t\t<div className=\"terminal-header\">\n\t\t\t</div>\n\t\t\t<div className=\"terminal-container\">\n\t\t\t\t\t<TerminalLine command=\"henrik.currentWork\"\n\t\t\t\t\t\t\t\t\t\t\t\tprint=\"Developer at Kron\">\n\t\t\t\t\t</TerminalLine>\n\t\t\t\t\t<TerminalLine command=\"henrik.education\"\n\t\t\t\t\t\t\t\t\t\t\t\tprint=\"Bachelor Informatics, Oslo University College (HiO)\">\n\t\t\t\t\t</TerminalLine>\n\t\t\t\t\t<TerminalLine command=\"henrik.resume\"\n\t\t\t\t\t\t\t\t\t\t\t\tprint=\"henrik-cv-NO.pdf\"\n\t\t\t\t\t\t\t\t\t\t\t\thref=\"https://github.com/hmol/Curriculum-Vitae/raw/master/henrik_cv.pdf\t\">\n\t\t\t\t\t</TerminalLine>\n\n\t\t\t\t\t<TerminalLine command=\"henrik.currentLocation\"\n\t\t\t\t\t\t\t\t\t\t\t\tprint=\"59.913868,10.752245\"\n\t\t\t\t\t\t\t\t\t\t\t\thref=\"https://www.google.com/maps/place/Oslo/\">\n\t\t\t\t\t</TerminalLine>\n\t\t\t\t\t<div className=\"terminal-line\">\n\t\t\t\t\t\t<div className=\"terminal-command\">\n\t\t\t\t\t\t\thenrik.interests\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"terminal-print\">\n\t\t\t\t\t\t\t[\"<a href=\"https://open.spotify.com/playlist/4o8JeOveTdtRBXFGFmeKxY?si=2K1fpj8eSoe9svLb6v-1dw\" target=\"_blank\" rel=\"noopener noreferrer\">music</a>\",\n\t\t\t\t\t\t\t \"<a href=\"https://www.imdb.com/list/ls090420886/\" target=\"_blank\" rel=\"noopener noreferrer\">movies</a>\", \n\t\t\t\t\t\t\t \"<a href=\"https://www.imdb.com/list/ls093266815/\" target=\"_blank\" rel=\"noopener noreferrer\">series</a>\", \n\t\t\t\t\t\t\t \"<a href=\"https://www.goodreads.com/user/show/87968877-henrik-molnes\" target=\"_blank\" rel=\"noopener noreferrer\">books</a>\", \n\t\t\t\t\t\t\t \"hiking\"]\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t  <div className=\"terminal-line\">\n\t\t\t\t\t<div className=\"terminal-command\">\n\t\t\t\t\t\t<span className=\"char\">\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t  </div>\n        );  }\n}\n\nexport default Terminal;\n","\nimport React from 'react';\nimport './Technologies.scss';\n\nclass Technologies extends React.Component<TechnologiesProps>  {\n    render() {\n\n        const technologies = this.props.names.map((item: string) => <span>{item}</span>);\n        \n        return (\n            <div className=\"technologies\">\n                {technologies}\n            </div>\n        );\n    }\n}\n\nexport default Technologies;\n\n\ntype TechnologiesProps = {\n\tnames: string[]\n}","import React, { Props } from 'react';\nimport './ProjectItem.scss';\nimport Technologies from './Technologies/Technologies';\nimport CalendarIcon from './calendar.svg';\n\nclass ProjectItem extends React.Component<ProjectItemProps> {\n\trender() {\n\n\t\tlet dateString = this.props.datestart;\n\t\tif(this.props.dateend) {\n\t\t\tdateString += ' – ' + this.props.dateend;\n\t\t}\n\t\tlet employer = ''\n\t\tif(this.props.employer) {\n\t\t\temployer = 'Employer: ' + this.props.employer;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"project\">\n\t\t\t\t<h3>{this.props.customer}</h3>\n\t\t\t\t<div className=\"date\">\n\t\t\t\t\t<img src={CalendarIcon} className=\"calendar-icon\"></img>\n\t\t\t\t\t{dateString}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"employer\">\n\t\t\t\t\t{employer}\n\t\t\t\t</div>\n\t\n\t\t\t\t<p dangerouslySetInnerHTML={{ __html: this.props.text }}></p>\n\t\t\t\t<Technologies names={this.props.technologies}></Technologies>\n\t\t\t</div>\n        );  }\n}\n\nexport default ProjectItem;\n\ntype ProjectItemProps = {\n\tcustomer: string,\n\ttext: string,\n\tdatestart: string,\n\tdateend?: string,\n\ttechnologies: string[],\n\temployer?: string\n}","import React from 'react';\nimport './Projects.scss';\nimport ProjectItem from './ProjectItem/ProjectItem';\n\nclass Projects extends React.Component {\n    render() {\n        return (\n        <div className=\"projects\">\n            <h2>Projects</h2>\n            <ProjectItem customer=\"Kron\" \n                 datestart=\"01/12/2019\"   \n                 text=\"I'm currently working as a developer in the norwegian financial service named Kron. Here we try to make investments as simple as possible, with a strong focus on user experience. \n                 When I started it was more like an startup where I had many roles: maintenence, creating new features, integrations with external systems, setting up new environments. \n                 <br/> <br>I also worked on the frontend side with react-native and sometimes when «shit hit the fan» I also helped out customer support in the chat. \n                 The last years I have been more focused on the backend side of things,. \n                 Some of the things I have done in Kron: implementing <a href='https://www.shifter.no/nyheter/na-starter-pensjonskampen-knallstart-for-utfordreren-kron/201971'>EPK (Egen pensjonskonto)</a>, switching out the portfolio system we used with a new one,\n                  creating a fund marketplace where customers can choose from over 500 funds instead of only a set of predefined packages.\n                <br><br>\n                Since the mantra in Kron always has been to put the customer first, we are quite proud of the fact that the app is the <a href='https://www.kode24.no/artikkel/kron-slar-tilbake-mot-app-kritikken-fra-shortcut-han-bommer/78883070'>highest rated financial app in Norway</a>.\"\n\t\t technologies={['python', 'pytest', 'linux', 'postgres', 'circleci', 'celery', 'arq', 'linode', 'redis', 'nomad', 'bash', 'consul', 'metabase', 'retool', 'react', 'react-native', 'Git', 'BankID', 'Signicat/OIDC']}>\n            </ProjectItem>\n            <ProjectItem customer=\"Cenium\" \n                 datestart=\"09/05/2019\"   \n                 dateend=\"29/11/2019\"\n                 employer=\"ITverket\"           \n                 text=\"I was part of a devops team at Cenium, that is a ERP system for hotels. Here I was responsible for regular maintenence work and implementing new features. For instance; I was responsible for creating support for a new type of key-cards that should work on all of the Nordic Choice hotels. \"\n\t\t technologies={['dotnet', 'C#', 'Azure', 'MSSQL Server', 'TeamCity', 'Octopus Deploy', 'Git', 'powershell', 'NUnit']}>\n            </ProjectItem>\n            <ProjectItem customer=\"A confidential project\" \n                    datestart=\"01/09/2016\"\n                    dateend=\"12/04/2019\"\n                    employer=\"ITverket\"\n                    text=\"Worked as a fullstack developer creating a new CRM system for a business in a niche market. Amongst other things I had responsibility for developing the case management functions in this system. The REST API was built in dotnetcore adhering to the CQRS pattern. On the frontend side we used Angular.\"\n                    technologies={['Google Cloud', 'nginx', 'Docker', 'CQRS', 'PostgreSQL', 'Angular', 'dotnet', 'C#', 'Scss', 'mongoDB', 'NServicebus', 'Git', 'NUnit', 'CircleCI', 'microservices']}>\n            </ProjectItem>\n            <ProjectItem customer=\"The norwegian goverment pension fund (SPK)\" \n                    datestart=\"01/09/2015\"\n                    dateend=\"31/08/2016\"\n                    employer=\"Making Waves\"\n                    text=\"Participated in the development of a new loan application for the members of the SPK. React on the frontend and .NET on the backend. I was also part of a devops team here and worked on maintenance of older systems and developing new functionality.\"\n                    technologies={['React', 'ASP.NET', 'C#', 'Solr', 'Episerver', 'Octopus Deploy', 'TeamCity', 'Git', 'MSSQL Server', 'NUnit']}>\n            </ProjectItem>\n            <ProjectItem customer=\"The norwegian goverment (Regjeringen)\" \n                    datestart=\"01/03/2014\"\n                    dateend=\"01/04/2015\"\n                    employer=\"Making Waves\"\n                    text=\"Worked with a team of other developers to create the new regjeringen.no. Some of the tasks I took part in on this project was: migration of the old content database to a new one, implementation of the new search functions, import of government publications from an external system and the development of several cms-page types.\"\n                    technologies={['Azure', 'Varnish', 'ElasticSearch', 'ASP.NET', 'C#', 'Episerver', 'MSSQL Server', 'Git', 'xUnit']}>\n            </ProjectItem>\n            <ProjectItem customer=\"The norwegian parliament (Stortinget)\" \n                    datestart=\"01/08/2012\"\n                    dateend=\"01/03/2014\"\n                    employer=\"Making Waves\"\n                    text=\"Took part of creating a new intranet for the Norwegian parliament. Developed several cms-page types for Episerver, integrations against internal systems writen in ASP.NET/C# and a enterprise search.\"\n                    technologies={['ASP.NET/c#', 'ElasticSearch', 'Powershell', 'Team City', 'MSSQL Server', 'Git']}>\n            </ProjectItem>\n        </div>\n        );  }\n}\n\nexport default Projects;","\nimport React from 'react';\nimport './Links.scss';\n\nclass Links extends React.Component  {\n    render() {\n\n        return (\n\t\t\t<div className=\"contact\">\n\t\t\t\t<h2>Links</h2>\n\t\t\t\t<div className=\"links\">\t\t\t\t\n\t\t\t\t\t<a href=\"mailto:molnes@gmail.com\">Mail</a>\n\t\t\t\t\t<a href=\"https://www.linkedin.com/in/henrikmolnes\">LinkedIn</a>\n\t\t\t\t\t<a href=\"https://github.com/hmol\">Github</a>\n\t\t\t\t</div>\n\t\t  \t</div>\n        );\n    }\n}\n\nexport default Links;","import React from 'react';\nimport Face from'./face.jpg';\nimport './App.scss';\nimport Terminal from './Components/Terminal/Terminal';\nimport Projects from './Components/Projects/Projects';\nimport Links from './Components/Links/Links';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <img src={Face} className=\"face\"></img> \n        <div className=\"header\">\n        > Hi! I'm Henrik <span>👋</span>\n        </div>\n        <p className=\"intro-sub\">\n          I work as a developer and I like to solve problems using technology.\n          I'm most comfortable in the back-end side. That being said, I do get satisfaction from having the responsibility \n          for a software feature and developing it all the way from the database up to the GUI.\n        </p>\n        <p className=\"intro-sub\">\n          Most of my work experience the latest years has been related to REST APIs and also integration with other external systems, using python or C#.\n          My preferred dev-environment consists of these vital parts: Ubuntu, Visual Studio Code, Docker and Git.\n        </p>\n        <Terminal></Terminal>\n        <Projects></Projects>\n        <h2>Some thoughts on software development</h2>\n        <p className=\"intro-sub\"> \n          <h3>Readable code</h3>\n          Code is often written one time and read a countless times. This is why I like readable code.\n        </p>\n        <p className=\"intro-sub\">\n          <h3>Tests</h3>\n          Most of the code should ideally have good tests, and I like it when the tests are run as a part of the CI pipeline. \n          In my experience tests will also serve as a form of documentation to new developers and thus make the code more readable. \n        </p>\n        <p className=\"intro-sub\">\n        <h3>KISS</h3>\n          Keep it simple stupid is my main mantra. This is because it is so easy to do overengineering in software development. I will always try to start out simple and then do iterations, refractor and extend the code if necessary.\n        </p>\n        <Links></Links>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}